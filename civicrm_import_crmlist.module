<?php

/** Include PHPExcel */
require_once 'Classes/PHPExcel.php';
/** Include PHPExcel_IOFactory */
require_once 'Classes/PHPExcel/IOFactory.php';
require_once 'Classes/PHPExcel/Writer/Excel2007.php';
//module_load_include('php', '', 'PHPExcel');


/**
 * Implementation of hook_menu().
 */

function civicrm_import_crmlist_menu(){
  return array(
    'admin/settings/civicrm_import_crmlist' => array(
      'title'            => 'civicrm_import_crmlist',
      'access arguments' => array('access content'), //array('import contacts'),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array('civicrm_import_crmlist_settings'),// 為什麼一定要 xxx_settings??
      'type'             => MENU_CALLBACK,
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function civicrm_import_crmlist_settings_theme() {
  return array(
    'civicrm_import_crmlist_settings' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function civicrm_import_crmlist_settings($form_state){
  

  $form['#theme'] = 'civicrm_import_crmlist_settings';

  // jinmou: important! ==> to get uploaded file info.
  $form['#attributes'] = array('enctype' => "multipart/form-data");

  $form['upload'] = array(
    '#type' => 'file',
    '#title' => t("Import file"),
    '#description' => t('Upload your excel(xls/xlsx) file here.'),
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Import'),
    '#default_value' => '',
  );

  // Form ´value´ : Save form_state info. to form 	~jinmou 
  $form['element'] = array
  (
     '#type' => 'value',
     '#value' => isset($form_state['values']['scheme']) ? $form_state['values']['scheme'] : FALSE,
  );
  
  // when the callback function is called more than once (i.e. when the template is chosen and submitted)
  if ($form_state['values']['scheme'])
  {
dpm(456);
  }

  return $form;
}


function theme_civicrm_import_crmlist_settings($form){
dpm(12345);
}

/*function civicrm_import_crmlist_settings_validate($form, &$form_state){

}*/


function civicrm_import_crmlist_settings_submit($form, &$form_state){
   set_time_limit(600); //何用？

//error_reporting(E_ALL);

   // Get uploaded file info.	
   $file = file_save_upload('upload');
	//dpm($file->filepath);
	//$file->filepath	
   
   date_default_timezone_set('Asia/Taipei');

   if (!file_exists($file->filepath)) {
	exit("file does not exist!!!" . PHP_EOL);
   }

dpm( date('H:i:s') );
dpm("Load file");
   $objPHPExcel = PHPExcel_IOFactory::load($file->filepath);

   // Get highest row & column
   $objWorksheet = $objPHPExcel->getActiveSheet(); // Number

   $highestRow = $objWorksheet->getHighestRow(); // English Letter

   $highestColumn = $objWorksheet->getHighestColumn();
   $highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
dpm($highestRow);
dpm($highestColumnIndex);

   // Save contents to 2-D array
   for ($row = 1; $row <= $highestRow; ++$row) {
//dpm($row);
      for ($col = 0; $col <= $highestColumnIndex; ++$col) {
         $crmContent[$row][$col] = $objWorksheet->getCellByColumnAndRow($col, $row)->getValue();
//dpm( $objWorksheet->getCellByColumnAndRow($col, $row)->getValue()); 
      }
   }

dpm(" Write to Excel2007 format");
   $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
   $objWriter->save(str_replace('.module', '.xlsx', __FILE__));
//echo date('H:i:s') , " File written to " , str_replace('.module', '.xlsx', __FILE__) , PHP_EOL;


// Echo memory peak usage
//echo date('H:i:s') , " Peak memory usage: " , (memory_get_peak_usage(true) / 1024 / 1024) , " MB" , PHP_EOL;

// Echo done
dpm(" Done writing files");

  
  return true;
}

/*
// this will place civicrm api function.
function civicrm_import_crmlist($id, $import, $type, $main_id = 'contact_id'){
  static $exists;

  // find out contact_id
  if($main_id == 'contact_id'){
    $params = array('contact_id' => $id);
  }
  else{
    $params = array($main_id => $id);
  }
  $retrieved = &civicrm_contact_get( $params );

  if(civicrm_error($retrieved) || empty($retrieved)){
    drupal_set_message("Can't not find contact id: $id", 'error');
    $id = NULL;
    return;
  }
  else{
    $id = key($retrieved);
  }
  
  foreach($import as $text){
    if(!$exists[$text]){
      // add tag or group base on $type
      $res = array();
      if($type == 'group'){
        // dedupe
        $params = array('title'=>$text);
        $result = civicrm_group_get($params);
        if(civicrm_error($result)){
          $params = array('title' => $text,'is_active' => 1 );
          $res = civicrm_group_add($params);
          if(civicrm_error($res)){
            drupal_set_message($res['error_message'], 'error');
            continue;
          }
          else{
            $exists[$text] = $res['result']; 
          
          }
        }
        else{
          $exists[$text] = key($result);
        }
      }
      else{
        $params = array('name' => $text);
        $result =& civicrm_tag_get($params);
        if ( civicrm_error ( $result )) {
          $params = array('name' => $text, 'is_active' => 1,'domain_id' => 1);
          $res = civicrm_tag_create($params);
          if(civicrm_error($res)){
            drupal_set_message($res['error_message'], 'error');
            continue;
          }
          else{
            $exists[$text] = $res['tag_id'];
          }
        }
        else{
          $exists[$text] = $result['id'];
        }
      }
    }

    // now import contact / tag relationship
    $params_sub = array('contact_id' => $id);
    if ($type == 'group') {
      $params_sub['group_id'] = $exists[$text];
      civicrm_group_contact_add($params_sub);
    }
    else {
      $params_sub['tag_id'] = $exists[$text];
      civicrm_entity_tag_add($params_sub);
    }
  }
}*/

