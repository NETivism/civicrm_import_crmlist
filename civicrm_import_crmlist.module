<?php

/** Include PHPExcel */
require_once 'Classes/PHPExcel.php';
/** Include PHPExcel_IOFactory */
require_once 'Classes/PHPExcel/IOFactory.php';
require_once 'Classes/PHPExcel/Writer/Excel2007.php';
//module_load_include('php', '', 'PHPExcel');


/**
 * Implementation of hook_menu().
 */

function civicrm_import_crmlist_menu(){
  return array(
    'admin/settings/civicrm_import_crmlist' => array(
      'title'            => 'civicrm_import_crmlist',
      'access arguments' => array('access content'), //array('import contacts'),
      'page callback'    => 'drupal_get_form',
      'page arguments'   => array('civicrm_import_crmlist_settings'),// 為什麼一定要 xxx_settings??
      'type'             => MENU_CALLBACK,
    )
  );
}

/**
 * Implementation of hook_theme().
 */
function civicrm_import_crmlist_settings_theme() {
  return array(
    'civicrm_import_crmlist_settings' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

function civicrm_import_crmlist_settings($form_state){  
   if (!$form_state['storage']['step']) 
      $form_state['storage']['step'] = 1;

   $form_state['values'] = $form_state['storage']['values'];
   //drupal_set_title('Multistep example - step '. $form_state['storage']['step'] . ' of '. STEPS);

   $form = array();
   
   switch($form_state['storage']['step']) {
      case 1:
	 // jinmou: important! ==> to get uploaded file info.
  	 $form['#attributes'] = array('enctype' => "multipart/form-data");

   	 $form['upload'] = array(
    	    '#type' => 'file',
    	    '#title' => t("Import file"),
            '#description' => t('Upload your excel(xls/xlsx) file here.'),
  	 );

	 $form['submit'] = array(
	   '#type' => 'submit',
	   '#value' => t('Import'),
	   '#default_value' => '',
  	  ); 
      break;

      case 2:
	 //$form_state['storage']['crmlist']
	 $highestCol = $form_state['storage']['ColNum'];
	  for ($index = 1; $index <= $highestCol; ++$index) {
		 $form[$index] = array(
			  '#title' => t('欄名稱'),
			  '#type' => 'textfield',
			  //'#description' => 'Tell me all about your life',
			  '#default_value' => $form_state['storage']['crmlist'][$index-1][1],
			  //'#rows' => 1,
			  //'#cols' => 1,
			  '#disabled'=> TRUE,
			  '#resizable' => TRUE,
			  '#prefix' => '<table><tr><td>',
	                  '#suffix' => '</td>',
			  '#size' => 10,	
			);
		 
		 $form[$index+100] = array(
			  '#title' => t('匯入資料（第一列）'),
			  '#type' => 'textfield',
			  //'#description' => 'Tell me all about your life',
			  '#default_value' => $form_state['storage']['crmlist'][$index-1][2],
			  //'#rows' => 1,
			  //'#cols' => 1,
			  '#disabled'=> TRUE,
			  '#resizable' => TRUE,
			  '#prefix' => '<td>',
	                  '#suffix' => '</td>',
			  '#size' => 40,	
			);

		 $form[$index+200] = array(
			  '#title' => t('匯入資料（第二列）'),
			  '#type' => 'textfield',
			  //'#description' => 'Tell me all about your life',
			  '#default_value' => $form_state['storage']['crmlist'][$index-1][3],
			  //'#rows' => 1,
			  //'#cols' => 1,
			  '#disabled'=> TRUE,
			  '#resizable' => TRUE,
			  '#prefix' => '<td>',
	                  '#suffix' => '</td>',
			  '#size' => 40,
			);

		 //$sindex = $index + $highestCol +1;
		 $schemes = array('',
     			'Name',
     			'Email',
     			'B-Day',
			'Mobil',
			'Tel',	
			'ID',			
			'Address',	
		 );
		 
 		 // ´select´ form
	     	 $form[$index+300] = array(
			  '#title' => t('與CiviCRM欄位配對'),
			  '#type' => 'select',
			  '#options' => $schemes,
			  '#default_value' => '',
			  '#prefix' => '<td>',
	                  '#suffix' => '</td></tr></table>',
			);
	  } // end for loop

		 $form['confirm'] = array(
			   '#type' => 'submit',
			   '#value' => t('Confirm'),
			   '#default_value' => '',
		  	  ); 
      break;

      case 3:
	 $form['finalstage'] = array(
			  '#title' => t('完成'),
			  '#type' => 'textfield',
			  //'#description' => 'Tell me all about your life',
			  '#default_value' => '請再次核對資料',
			  //'#rows' => 1,
			  //'#cols' => 1,
			  '#disabled'=> TRUE,
			  '#resizable' => TRUE,
			);
      break;		
   } // End switch
   return $form;
}


// 就是不會被呼叫??????
function theme_civicrm_import_crmlist_settings($form){
dpm(12345);
}

/*function civicrm_import_crmlist_settings_validate($form, &$form_state){

}*/


function civicrm_import_crmlist_settings_submit($form, &$form_state){
	set_time_limit(600); //何用？

	// multistep processing 
	if (!$form_state['storage']['values']) 
		$form_state['storage']['values'] = array();
	
	$form_state['storage']['step']++;

//dpm($form_state['storage']['step']);

	if ($form_state['storage']['step'] == 2) // Second page: Retrieve uploaded Excel file 
	{
	   // Clear the storage and rebuild so that the form doesn't rebuild, and the #redirect works
	   $form_state['rebuild'] = TRUE;
	   //unset($form_state['storage']);

	   // Get uploaded file info.	
	   $file = file_save_upload('upload');
	   if (!file_exists($file->filepath)) {
		exit("file does not exist!!!" . PHP_EOL);
	   }

date_default_timezone_set('Asia/Taipei');
dpm( date('H:i:s') );
dpm("Load file");

	   	// Create PHPExcel object
	   	$objPHPExcel = PHPExcel_IOFactory::load($file->filepath);
	   	// Get active worksheet highest row & column
	   	$objWorksheet = $objPHPExcel->getActiveSheet(); 
		// Get Row and Column boundry
		$highestRow = $objWorksheet->getHighestRow(); 	// Number
		$highestColumn = $objWorksheet->getHighestColumn();  // English Letter
		$highestColumnIndex = PHPExcel_Cell::columnIndexFromString($highestColumn);
dpm($highestRow);
dpm($highestColumnIndex);
	   
	   	// Save the info. to form_state
	   	$form_state['storage']['RowNum'] = $highestRow;
	   	$form_state['storage']['ColNum'] = $highestColumnIndex;
	   	$form_state['storage']['crmlist'] = array();

	   	// Save contents to 2-D array
	   	for ($col = 0; $col <= $highestColumnIndex; ++$col){
	      		for ($row = 1; $row <= $highestRow; ++$row) 	
	      		{
		 		$crmContent[$col][$row] = $objWorksheet->getCellByColumnAndRow($col, $row)->getValue();
		 		$form_state['storage']['crmlist'][$col][$row] = $crmContent[$col][$row];
//dpm($form_state['storage']['crmlist'][$col][$row]);
	      		}
	   	}
	} // End if--step = 2

	// Process the data type user selected and call the string process functions
	if ($form_state['storage']['step'] == 3) // Final page: User chose item and process the info.
	{
	   	$objPHPExcel = new PHPExcel();
		$objWorksheet = $objPHPExcel->getActiveSheet(); 
//dpm($highestColumnIndex);

		$colNum = $form_state['storage']['ColNum'];
		$rowNum = $form_state['storage']['RowNum'];
dpm($colNum);
dpm($rowNum);
	
		$rCol=0;
		$rRow=0;
		$wCol=0;
		$wRow=0;
		for ($col = 0; $col <= $colNum; ++$col) {
			$index = 301 + $col;
	        	$item = $form_state['values'][$index]; // $item: 0:Nothing; 1:Name; 2:Email; 3:B-day; 4:mobil; 5:phones; 6:ID#; 7:Address 

			if ($item>0)
			{
				$rCol++;

				//===================================================	        
				// for Albert: call specific string process function input:$form_state['storage']['crmlist'][$col]
				// input:$form_state['storage']['crmlist'][$col] : one column
				// return: one column (maybe one correct & and one wrong column)
				// Temperary test
				$test[$rCol] = $form_state['storage']['crmlist'][$col];
				//===================================================	

				for ($row = 1; $row <= $rowNum; ++$row){
					$objWorksheet->setCellValueByColumnAndRow($rCol-1, $row, $test[$rCol][$row]);
				} // End row for loop
			} // End if 
	   	} // End column for loop

		// Write to the Excel file
dpm(" Write to Excel2007 format");
	      	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
	      	$objWriter->save(str_replace('.module', '.xlsx', __FILE__));
dpm(" Done writing files");	
	} // End if--step = 3
	return true;
}


